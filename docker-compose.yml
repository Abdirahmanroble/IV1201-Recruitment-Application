version: "3.8"
services:
  # Back-end service
  app:
    build:
      context: ./back_end
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      DB_DATABASE: iv1201db
      DB_USERNAME: postgres
      DB_PASSWORD: password123
      DB_HOST: postgres
      DB_PORT: 5432
    depends_on:
      - postgres
    networks:
      - app-network

  # Database (PostgreSQL)
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: iv1201db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - ./back_end/initdb:/docker-entrypoint-initdb.d/
    networks:
      - app-network

  # Front-end Container
  # front-end:
  #   build:
  #     context: ./front_end
  #     dockerfile: Dockerfile
  #   container_name: front_end_tapp
  #   ports:
  #     - "4000:4000"
  #   volumes:
  #     - ./front_end/src:/usr/src/app/src
  #     - /usr/src/app/node_modules
  #   environment:
  #     - NODE_ENV=development
  #   networks:
  #     - app-network

  # Front-end Container
  front-end:
    build:
      context: ./front_end
      dockerfile: Dockerfile
    container_name: front_end_tapp
    ports:
      - "4000:5173"
    volumes:
      - ./front_end:/usr/src/app # Map the entire front_end directory
      - /usr/src/app/node_modules # Keep node_modules internal to the container
    environment:
      - NODE_ENV=development
    networks:
      - app-network
    stdin_open: true
    tty: true

networks:
  app-network:
    driver: bridge
